@inproceedings{minisy2020mm,
    author     = {Mondok, Mil\'an and V\"or\"os, Andr\'as},
    title      = {Abstraction-Based Model Checking of Linear Temporal Properties},
    year       = {2020},
    booktitle  = {Proceedings of the 27th PhD Mini-Symposium},
    location   = {Budapest, Hungary},
    publisher  = {Budapest University of Technology and Economics, Department of Measurement and Information Systems},
    editor     = {Renczes, Bal\'azs},
    pages      = {29--32},

    type       = {Local event},
    url_pdf    = {publications/minisy2020mm.pdf},
    abstract   = {Even though the expressiveness of linear temporal logic (LTL) supports engineering application, model checking of such properties is a computationally complex task and state space explosion often hinders successful verification. LTL model checking consists of constructing automata from the property and the system, generating the synchronous product of the two automata and checking its language emptiness. We propose a novel LTL model checking algorithm that uses abstraction to tackle the challenge of state space explosion. This algorithm combines the advantages of two commonly used model checking approaches, counterexample-guided abstraction refinement and automata theoretic LTL model checking. The main challenge in combining these is the refinement of "lasso"-shaped counterexamples, for which task we propose a novel refinement strategy based on interpolation.},
}

@InProceedings{facs23,
author="Graics, Bence
and Mondok, Mil{\'a}n
and Moln{\'a}r, Vince
and Majzik, Istv{\'a}n",
editor="C{\'a}mara, Javier
and Jongmans, Sung-Shik",
title="Model-Based Testing ofÂ Asynchronously Communicating Distributed Controllers",
booktitle="Formal Aspects of Component Software",
year="2024",
publisher="Springer Nature Switzerland",
address="Cham",
pages="23--44",
abstract="Programmable controllers are gaining prevalence even in distributed safety-critical infrastructures, e.g., in the railway and aerospace industries. Such systems are generally integrated using multiple loosely-coupled reactive components and must satisfy various critical requirements. Thus, their systematic testing is an essential task, which can be encumbered by their distributed characteristics. This paper presents a model-based integration test generation approach leveraging hidden formal methods based on the collaborating statechart models of the components. Statecharts can be integrated using various composition modes (e.g., synchronous and asynchronous) and then transformed (via a symbolic transition systems formalism -- XSTS) into the input formalisms of model checker back-ends, namely UPPAAL, Theta and Spin in an automated way. The model checkers are utilized for test generation based on multiple coverage criteria. The approach is implemented in our open source Gamma Statechart Composition Framework and evaluated on industrial-scale distributed controller subsystems from the railway industry.",
isbn="978-3-031-52183-6"
}
